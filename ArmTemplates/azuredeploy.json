{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appServicePlan": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "sftpHost": {
      "type": "string"
    },
    "sftpPort": {
      "type": "string"
    },
    "sftpUsername": {
      "type": "string"
    },
    "sftpPassword": {
      "type": "string"
    },
    "sftpAuthMode": {
      "type": "string"
    },
    "maxIterations": {
      "type": "string"
    },
    "sftpDirectory": {
      "type": "string"
    },
    "winScpSchedule": {
      "type": "string"
    },
    "sshNetSchedule": {
      "type": "string"
    },
    "appInsightsName": {
      "type": "string"
    },
    "keyVaultName": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "apiVersion": "2021-03-01",
      "location": "[resourceGroup().location]",
      "name": "[parameters('appServicePlan')]",
      "properties": {
        "name": "[parameters('appServicePlan')]"
      },
      "kind": "app",
      "sku": {
        "tier": "Dynamic",
        "name": "Y1"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2021-03-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('appServicePlan'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "name": "[parameters('functionAppName')]",
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlan'))]",
        "siteConfig": {
          "http20Enabled": true,
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false,
          "ftpsState": "Disabled",
          "appSettings": [
            {
              "name": "SftpSettings:Host",
              "value": "[parameters('sftpHost')]"
            },
            {
              "name": "SftpSettings:Port",
              "value": "[parameters('sftpPort')]"
            },
            {
              "name": "SftpSettings:AuthMode",
              "value": "[parameters('sftpAuthMode')]"
            },
            {
              "name": "SftpSettings:Username",
              "value": "[parameters('sftpUsername')]"
            },
            {
              "name": "SftpSettings:Password",
              "value": "[parameters('sftpPassword')]"
            },
            {
              "name": "SftpSettings:PrivateKeyPpkFormat",
              "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyVaultName'), ';SecretName=SftpTestPrivateKeyPpkFormat)')]"
            },
            {
              "name": "SftpSettings:PrivateKeyRsaFormat",
              "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyVaultName'), ';SecretName=SftpTestPrivateKeyRsaFormat)')]"
            },
            {
              "name": "SftpSettings:PrivateKeyPassPhrase",
              "value": "[concat('@Microsoft.KeyVault(VaultName=', parameters('keyVaultName'), ';SecretName=SftpTestPrivateKeyPassPhrase)')]"
            },
            {
              "name": "MaxIterations",
              "value": "[parameters('maxIterations')]"
            },
            {
              "name": "SftpDirectory",
              "value": "[parameters('sftpDirectory')]"
            },
            {
              "name": "WinScpSchedule",
              "value": "[parameters('winScpSchedule')]"
            },
            {
              "name": "SshNetSchedule",
              "value": "[parameters('sshNetSchedule')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
              "value": "1"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',concat(listKeys(variables('storageAccountid'),'2021-04-01').keys[0].value),';EndpointSuffix=core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('storageAccountName'),';AccountKey=',concat(listKeys(variables('storageAccountid'),'2021-04-01').keys[0].value))]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]",
              "slotSetting": false
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "WEBSITE_TIME_ZONE",
              "value": "New Zealand Standard Time"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            }
          ]
        },
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-11-01-preview",
      "name": "[concat(parameters('keyVaultName'), '/add')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01', 'Full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      }
    }
  ]
}
